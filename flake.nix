{
  description = "A small software environment for your plain-text notes directory";
  inputs = {
    flake-utils.url = "github:numtide/flake-utils";
    emanote.url = "github:srid/emanote";
  };
  nixConfig = {
    binaryCaches = [ "https://srid.cachix.org" ];
    binaryCachePublicKeys = [ "srid.cachix.org-1:MTQ6ksbfz3LBMmjyPh0PLmos+1x+CdtJxA/J2W+PQxI=" ];
  };
  outputs = inputs@{ self, nixpkgs, flake-utils, emanote, ... }:
    flake-utils.lib.eachDefaultSystem (system:
      let pkgs = nixpkgs.legacyPackages.${system}; in
      rec {
        defaultApp = apps.main;
        defaultPackage = defaultApp.script;
        apps = {
          main = rec {
            type = "app";
            menu = ((pkgs.formats.yaml {}).generate "menu.yaml" {
              global = {
              };
              pages = {
                root = {
                  title = "notesdir";
                  groups = [
                    {
                      title = "Favorites";
                      entries = [
                        {
                          shortcut = "t";
                          title = "tmux";
                          return = "tmux";
                        }
                      ];
                    }
                  ];
                };
                tmux = {
                  title = "notesdir > tmux";
                  groups = [
                    {
                      entries = [
                        {
                          shortcut = "a";
                          title = "attach (press C-b d to return to this menu!)";
                          command = "tmux -L \"$TMUX_SOCKET\" a -t \"$TMUX_SESSION\"";
                          return = "root";
                        }
                        {
                          shortcut = "q";
                          title = "return to main menu";
                          return = "root";
                        }
                      ];
                    }
                  ];
                };
              };
            });
            # TODO: redesign control flow. Menu should be generated by an executable, to allow dynamism
            # TODO: factor out commands into seperate scripts
            # TODO: report any errors starting emanote, eg due to port already in use
            # TODO: display tmux status
            # TODO: load .env (port number etc) (or just check for existing value before setting env vars)
            script = pkgs.writeShellApplication {
              name = "notesdir";
              text = ''
                set -xe
                TMUX_SOCKET="notesdir.tmux.socket"
                TMUX_SESSION="$(basename "$PWD")-$(echo "$PWD" | sha1sum | cut -f1 -d ' ')"
                export TMUX_SOCKET TMUX_SESSION
                ${pkgs.tmux}/bin/tmux -L "$TMUX_SOCKET" has-session -t "$TMUX_SESSION" || ${pkgs.tmux}/bin/tmux -L "$TMUX_SOCKET" new-session -s "$TMUX_SESSION" -dAD -n emanote ${emanote.defaultPackage.${system}}/bin/emanote run --port 7072
                ${pkgs.tydra}/bin/tydra --ignore-exit-status ${menu}
              '';
            };
            program = "${script}/bin/notesdir";
          };
        };
        devShell = pkgs.mkShell {
          buildInputs = [
            pkgs.tydra
            emanote.defaultPackage.${system}
          ];
        };
      }
    );
}
